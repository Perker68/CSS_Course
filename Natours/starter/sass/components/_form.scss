.form {
    &__group:not(:last-child) { // trick to select everything but the last child
        margin-bottom: 2rem;
    }

    &__input {
        font-size: 1.5rem;
        font-family: inherit; //this element will now inherit the font-family. input elements are an exception that need this because they don't do it automatically like most elements
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        transition: all .3s;

        &::-webkit-input-placeholder { //pseudo-elements are things that are actually on the page, like a placeholder. pseudo-classes are more like a state (eg. :hover)
            color: $color-grey-dark-2;
        }
        
        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            // box-shadow: 
            // 0 <-- X direction
            // 1rem <-- Y direction
            // 2rem <-- blur
            // rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }
        
        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }
    }

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    &__input:placeholder-shown + &__label { // adjacent sibling selector (+). goes to the sibling immediately after the one selected
        opacity: 0; //hidden
        visibility: hidden; //need this because with only opacity: 0, element is still on page. with visibility: hidden, it's really gone. but we need to keep opacity in order to be able to animate
        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 49%;
        display: inline-block;
    }

    &__radio-input {
        display: none; //hiding the radio buttons because we want to use them to control our custom radio buttons but we don't want to actually see them
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative; //position required because it's parent of radio-button below, which has position: absolute
        padding-left: 4.5rem;
    }

    &__radio-button {
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;


        &::after {
            content: ""; //pseudo-elements always need this content property set to something
            display: block; //pseudos also need display set to something
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%; //this makes it a circle
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    &__radio-input:checked ~ &__radio-label &__radio-button::after { //when radio-input is checked, we select its sibling (~) and its child for changing
        opacity: 1;
    }
}